// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: InternalMsg.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InternalMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID []byte `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Command   uint32 `protobuf:"varint,2,opt,name=command,proto3" json:"command,omitempty"`
	// for client kv requests
	ClientAddress *string `protobuf:"bytes,3,opt,name=clientAddress,proto3,oneof" json:"clientAddress,omitempty"`
	KVRequest     []byte  `protobuf:"bytes,4,opt,name=kVRequest,proto3,oneof" json:"kVRequest,omitempty"`
	//  Propagation:
	//- after commiting on the head node, the head node wil lcreate the following message:
	//1. clientAddress: string
	//2. command: ProcessPropagatedKVRequest
	//3. response to client: false
	//4. table selection: middle
	//5. kvRequest
	//6. messageID from the client will be identical (TODO: make sure this is the case)
	//
	//- middle node receives that request:
	//1. unpack, check the command, and do stuff (commit, rs: where to send next)
	//2. send a forward request with:
	//1. clientAddress: string
	//2. command: ProcessPropagatedKVRequest
	//3. response to client: true
	//4. table selection: tail
	//5. kvRequest
	//6. messageID from the client will be identical (TODO: make sure this is the case)
	//
	//- tail node receives that request:
	//1. unpack, check the command, and do stuff (commit, rs: where to send next)
	//- coordinator doesn't have to do anything because when it forwards the request to storage,
	//- storage will check if response is required & send a respone to the client.
	RespondToClient      *bool   `protobuf:"varint,5,opt,name=respondToClient,proto3,oneof" json:"respondToClient,omitempty"`
	OriginatingNodeTable *uint32 `protobuf:"varint,6,opt,name=originatingNodeTable,proto3,oneof" json:"originatingNodeTable,omitempty"`
	//  key migration & table migration generalized messages:
	//- coordinator creates and sends an internal message to storage:
	//1.	MessageID: structure.GenerateMessageID(),
	//2.	Command: uint32(constants.ProcessKeyMigrationRequest),
	//3.	MigrationRangeLowerbound: &lowerBound,
	//4.	MigrationRangeUpperbound: &upperBound,
	//5.	MigrationDestinationAddress: &(gmsEventMessage.Node)
	//
	//6. originating node's table (head, middle, tail)
	//7. destination node's table (head, middle, tail)
	//8. TODO: intelligently set lowerbound & upperbound so that it migrates the entire table
	//- if lowerbound == upperbound, migrate the entire table
	MigrationRangeLowerbound    *string `protobuf:"bytes,7,opt,name=migrationRangeLowerbound,proto3,oneof" json:"migrationRangeLowerbound,omitempty"`
	MigrationRangeUpperbound    *string `protobuf:"bytes,8,opt,name=migrationRangeUpperbound,proto3,oneof" json:"migrationRangeUpperbound,omitempty"`
	MigrationDestinationAddress *string `protobuf:"bytes,9,opt,name=migrationDestinationAddress,proto3,oneof" json:"migrationDestinationAddress,omitempty"`
	DestinationNodeTable        *uint32 `protobuf:"varint,10,opt,name=destinationNodeTable,proto3,oneof" json:"destinationNodeTable,omitempty"`
	// for the NETWORK JOIN REQUEST
	JoinType   *string `protobuf:"bytes,11,opt,name=joinType,proto3,oneof" json:"joinType,omitempty"`     //"JOINED","FAIL"
	FailOption *string `protobuf:"bytes,12,opt,name=failOption,proto3,oneof" json:"failOption,omitempty"` //"SUCCESSOR", or "GRAND_SUCCESSOR"
	FailIP     *string `protobuf:"bytes,13,opt,name=failIP,proto3,oneof" json:"failIP,omitempty"`
}

func (x *InternalMsg) Reset() {
	*x = InternalMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_InternalMsg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalMsg) ProtoMessage() {}

func (x *InternalMsg) ProtoReflect() protoreflect.Message {
	mi := &file_InternalMsg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalMsg.ProtoReflect.Descriptor instead.
func (*InternalMsg) Descriptor() ([]byte, []int) {
	return file_InternalMsg_proto_rawDescGZIP(), []int{0}
}

func (x *InternalMsg) GetMessageID() []byte {
	if x != nil {
		return x.MessageID
	}
	return nil
}

func (x *InternalMsg) GetCommand() uint32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *InternalMsg) GetClientAddress() string {
	if x != nil && x.ClientAddress != nil {
		return *x.ClientAddress
	}
	return ""
}

func (x *InternalMsg) GetKVRequest() []byte {
	if x != nil {
		return x.KVRequest
	}
	return nil
}

func (x *InternalMsg) GetRespondToClient() bool {
	if x != nil && x.RespondToClient != nil {
		return *x.RespondToClient
	}
	return false
}

func (x *InternalMsg) GetOriginatingNodeTable() uint32 {
	if x != nil && x.OriginatingNodeTable != nil {
		return *x.OriginatingNodeTable
	}
	return 0
}

func (x *InternalMsg) GetMigrationRangeLowerbound() string {
	if x != nil && x.MigrationRangeLowerbound != nil {
		return *x.MigrationRangeLowerbound
	}
	return ""
}

func (x *InternalMsg) GetMigrationRangeUpperbound() string {
	if x != nil && x.MigrationRangeUpperbound != nil {
		return *x.MigrationRangeUpperbound
	}
	return ""
}

func (x *InternalMsg) GetMigrationDestinationAddress() string {
	if x != nil && x.MigrationDestinationAddress != nil {
		return *x.MigrationDestinationAddress
	}
	return ""
}

func (x *InternalMsg) GetDestinationNodeTable() uint32 {
	if x != nil && x.DestinationNodeTable != nil {
		return *x.DestinationNodeTable
	}
	return 0
}

func (x *InternalMsg) GetJoinType() string {
	if x != nil && x.JoinType != nil {
		return *x.JoinType
	}
	return ""
}

func (x *InternalMsg) GetFailOption() string {
	if x != nil && x.FailOption != nil {
		return *x.FailOption
	}
	return ""
}

func (x *InternalMsg) GetFailIP() string {
	if x != nil && x.FailIP != nil {
		return *x.FailIP
	}
	return ""
}

var File_InternalMsg_proto protoreflect.FileDescriptor

var file_InternalMsg_proto_rawDesc = []byte{
	0x0a, 0x11, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x22, 0xc7, 0x06,
	0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x09, 0x6b, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x09, 0x6b, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x37, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x03, 0x52, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4e,
	0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x18, 0x6d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x77,
	0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x18, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x18,
	0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x70,
	0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x18, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x55, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a,
	0x1b, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x06, 0x52, 0x1b, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x07, 0x52, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x49, 0x50, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x49, 0x50, 0x88, 0x01, 0x01,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6b, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x1b, 0x0a,
	0x19, 0x5f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x4c, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x6d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x70, 0x70,
	0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x6d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x66, 0x61, 0x69, 0x6c, 0x49, 0x50, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x62, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_InternalMsg_proto_rawDescOnce sync.Once
	file_InternalMsg_proto_rawDescData = file_InternalMsg_proto_rawDesc
)

func file_InternalMsg_proto_rawDescGZIP() []byte {
	file_InternalMsg_proto_rawDescOnce.Do(func() {
		file_InternalMsg_proto_rawDescData = protoimpl.X.CompressGZIP(file_InternalMsg_proto_rawDescData)
	})
	return file_InternalMsg_proto_rawDescData
}

var file_InternalMsg_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_InternalMsg_proto_goTypes = []interface{}{
	(*InternalMsg)(nil), // 0: protobuf.InternalMsg
}
var file_InternalMsg_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_InternalMsg_proto_init() }
func file_InternalMsg_proto_init() {
	if File_InternalMsg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_InternalMsg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_InternalMsg_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_InternalMsg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_InternalMsg_proto_goTypes,
		DependencyIndexes: file_InternalMsg_proto_depIdxs,
		MessageInfos:      file_InternalMsg_proto_msgTypes,
	}.Build()
	File_InternalMsg_proto = out.File
	file_InternalMsg_proto_rawDesc = nil
	file_InternalMsg_proto_goTypes = nil
	file_InternalMsg_proto_depIdxs = nil
}
